{"version":3,"sources":["components/New.js","components/ToDoList.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["New","state","text","onChange","event","setState","target","value","append","props","adder","this","onClick","Component","ToDoList","render","list","listOfToDos","map","it","style","done","textDecoration","id","React","Main","newText","newId","length","concat","path","exact","App","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"mPA6BeA,E,4MA1BXC,MAAQ,CACJC,KAAM,I,EAGVC,SAAW,SAACC,GACR,EAAKC,SAAS,CACVH,KAAME,EAAME,OAAOC,S,EAG3BC,OAAS,WACL,EAAKC,MAAMC,MAAM,EAAKT,MAAMC,MAC5B,EAAKG,SAAS,CACVH,KAAM,M,4CAId,WACI,OACI,qCACI,0BAAUK,MAAOI,KAAKV,MAAMC,KAAMC,SAAUQ,KAAKR,WACjD,wBAAQS,QAASD,KAAKH,OAAtB,0B,GArBEK,aCiBHC,E,4MAfXC,OAAS,WACL,IAAMC,EAAO,EAAKP,MAAMQ,YAAYC,KAAI,SAAAC,GAAE,OACtC,oBACIC,MAAOD,EAAGE,KAAO,CAAEC,eAAgB,gBAAmB,GAD1D,SAGKH,EAAGjB,MAHCiB,EAAGI,OAKhB,OACA,6BACKP,K,YAXUQ,IAAMX,WC+CdY,E,4MA1CXxB,MAAQ,CACJgB,YAAa,CACT,CAAEM,GAAI,EAAGrB,KAAM,gBAAiBmB,MAAM,GACtC,CAAEE,GAAI,EAAGrB,KAAM,mBAAoBmB,MAAM,GACzC,CAAEE,GAAI,EAAGrB,KAAM,6BAA8BmB,MAAM,GACnD,CAAEE,GAAI,EAAGrB,KAAM,sBAAkBmB,MAAM,K,EAI/CX,MAAQ,SAACgB,GACL,IAAMC,EAAQ,EAAK1B,MAAMgB,YAAYW,OACrC,EAAKvB,SAAS,CACVY,YAAa,EAAKhB,MAAMgB,YAAYY,OAChC,CACIN,GAAII,EACJzB,KAAMwB,EACNL,MAAM,O,EAMtBN,OAAS,WACL,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOe,KAAK,IAAIC,OAAK,EAArB,SACA,kCAAS,cAAC,EAAD,CAAUd,YAAa,EAAKhB,MAAMgB,kBAE3C,cAAC,IAAD,CAAOa,KAAK,OAAZ,SACA,kCAAS,cAAC,EAAD,CAAKpB,MAAO,EAAKA,YAE1B,cAAC,IAAD,CAAOoB,KAAK,SAAZ,SACA,kCAAS,mDAET,cAAC,IAAD,UACA,kCAAS,uD,YApCNN,IAAMX,WCuBVmB,MAtBf,WAEE,OACE,eAAC,IAAD,WACE,8DACA,iCAEE,gCACE,cAAC,IAAD,CAASC,GAAG,IAAIF,OAAK,EAArB,6BACA,cAAC,IAAD,CAASE,GAAG,OAAZ,wBACA,cAAC,IAAD,CAASA,GAAG,SAAZ,8BAGJ,cAAC,EAAD,OAIA,gDCZSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAAS5B,OACP,cAAC,IAAM6B,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ce012c6c.chunk.js","sourcesContent":["import {Component} from 'react'\r\n\r\nclass New extends Component {\r\n    state = {\r\n        text: \"\"\r\n    }\r\n\r\n    onChange = (event) => {\r\n        this.setState({\r\n            text: event.target.value\r\n        })\r\n    }\r\n    append = () => {\r\n        this.props.adder(this.state.text)\r\n        this.setState({\r\n            text: \"\"\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <textarea value={this.state.text} onChange={this.onChange} />\r\n                <button onClick={this.append}>Dodaj</button>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default New;\r\n","import React from 'react';\r\n\r\nclass ToDoList extends React.Component {\r\n\r\n    render = () => {\r\n        const list = this.props.listOfToDos.map(it => (\r\n            <li key={it.id}\r\n                style={it.done ? { textDecoration: \"line-through\" } : {}}\r\n            >\r\n                {it.text}</li>\r\n        ))\r\n        return (\r\n        < ul >\r\n            {list}\r\n        </ul >\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToDoList;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport New from './New'\r\nimport ToDoList from './ToDoList';\r\n\r\nclass Main extends React.Component {\r\n    state = {\r\n        listOfToDos: [\r\n            { id: 1, text: \"Hakuna matata\", done: false },\r\n            { id: 2, text: \"Summer is coming\", done: true },\r\n            { id: 3, text: \"Za 2 tygodnie otwieramy...\", done: false },\r\n            { id: 4, text: \"Chodź szogunie\", done: false },\r\n        ]\r\n    }\r\n\r\n    adder = (newText) => {\r\n        const newId = this.state.listOfToDos.length;\r\n        this.setState({\r\n            listOfToDos: this.state.listOfToDos.concat(\r\n                {\r\n                    id: newId,\r\n                    text: newText,\r\n                    done: false\r\n                }\r\n            )\r\n        });\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/\" exact>\r\n                <section><ToDoList listOfToDos={this.state.listOfToDos} /></section>\r\n                </Route>\r\n                <Route path=\"/new\">\r\n                <section><New adder={this.adder} /></section>\r\n                </Route>\r\n                <Route path=\"/trash\">\r\n                <section><h2>Śmietnik</h2></section>\r\n                </Route>\r\n                <Route>\r\n                <section><h2>404 not found</h2></section>\r\n                </Route>\r\n          </Switch>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main;\r\n","import './App.css';\n\n\nimport { BrowserRouter as Router, NavLink} from 'react-router-dom';\n\nimport Main from './components/Main'\n\nfunction App() {\n\n  return (\n    <Router>\n      <header>Tu jest nagłówek</header>\n      <main>\n\n        <nav>\n          <NavLink to=\"/\" exact>Lista wszytkich</NavLink>\n          <NavLink to=\"/new\">Dodaj nowy</NavLink>\n          <NavLink to=\"/trash\">Śmietnik</NavLink>\n        </nav>\n\n      <Main/>\n\n      </main>\n\n      <footer>Stopka</footer>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}